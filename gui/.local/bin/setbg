#!/usr/bin/env bash

CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
DEFAULT_COLOR='catppuccin'
DEFAULT_BG='dark'

has() {
	command -v "$1" >/dev/null 2>&1
}

get-theme-variant() {
	# $1: name of the old theme
	# $2: 'light' or 'dark'
	echo "$1" | sed "s/dark\|light/$2/" | sed "s/Dark\|Light/${2^}/"
}

setbg-gtk() {
	# $1: 'light' or 'dark'
	dconf write /org/gnome/desktop/interface/color-scheme "'prefer-$1'"
}

setbg-alacritty() {
	# $1: 'light' or 'dark'
	local config_dir="$CONFIG_HOME/alacritty"
	local config="$config_dir/alacritty.toml"
	local theme_path="$config_dir/theme.toml"
	local themes_dir="$config_dir/themes"
	# If $1 is empty, only need to ensure symlink to color theme file exists
	[[ -z "$1" ]] &&
		ensure-slink "$themes_dir/$DEFAULT_BG.toml" "$theme_path" ||
		force-slink "$themes_dir/$1.toml" "$theme_path"
	[[ -e "$config" ]] && touch "$config" # Reload config
}

setbg-nvim() {
	# $1: 'light' or 'dark'
	if [[ -z "$1" ]] || ! has nvim; then
		return 1
	fi
	local runtime_dir="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"
	local appname="${NVIM_APPNAME:-nvim}"
	for sock in "$runtime_dir"/"$appname".*.0; do
		nvim --clean --headless --server "$sock" \
			--remote-send "<Cmd>if &bg !=# '$1' | let g:script_set_bg=1 \
                | set bg=$1 | unlet g:script_set_bg | endif<CR>" +'qa!' \
			2>/dev/null
	done
	if has jq; then
		local colors_json="$STATE_HOME/nvim/colors.json"
		if [[ ! -e "$colors_json" ]]; then
			touch "$colors_json"
		fi
		local bg=$(jq -r '.bg' "$colors_json")
		if [[ "$bg" != "$1" ]]; then
			jq --arg bg "$1" '.bg = $bg' \
				"$colors_json" >"$colors_json.tmp"
			mv "$colors_json.tmp" "$colors_json"
		fi
	fi
}

setbg-fish() {
	# $1: 'light' or 'dark'
	local themes_dir="$CONFIG_HOME/fish/themes"
	local theme_path="$themes_dir/Current.theme"
	if [[ -z "$1" ]]; then
		ensure-slink "$themes_dir/${DEFAULT_BG^}.theme" "$theme_path"
	else
		force-slink "$themes_dir/${1^}.theme" "$theme_path"
	fi
	has fish &&
		fish -c 'set -U __fish_reload_theme "$(head -c 16 /dev/urandom | base32)"'
}

usage() {
	echo 'Usage: setbg [light|dark]'
	exit 1
}

main() {
	local bg=''
	for arg in "$@"; do
		case "$arg" in
		light | dark)
			bg="$arg"
			shift
			;;
		*)
			usage
			;;
		esac
	done
	niri msg action do-screen-transition
	setbg-gtk "$bg" &
	setbg-alacritty "$bg" &
	# setbg-nvim "$bg" &
	# setbg-fish "$bg" &
	return 0
}

main "$@"
